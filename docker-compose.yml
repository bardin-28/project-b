version: '3.9'

services:
  backend:
    build: .
    ports:
      - '80:80'
    networks:
      - backend
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./:/app
      - /app/node_modules

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
#    ports:
#      - '5432:5432'
    networks:
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '8081:8081'
    networks:
      - backend
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis:latest
    build: ./docker/redis
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - backend
    volumes:
      - redis:/data

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?sslmode=disable"
    ports:
      - '9187:9187'
    depends_on:
      - postgres

volumes:
  postgres-data:
    driver: local
  redis:
    driver: local

networks:
  backend:
    driver: bridge
